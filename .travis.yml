language: ruby
rvm:
    - 2.5
env:
    - AWS_USER_ID:"780722053658" AWS_ECR_APP="780722053658.dkr.ecr.us-east-2.amazonaws.com/arquichat-repo"
services:
    - docker
branches:
    only:
        - main

script:
    - sed -i -e 's/\r$/\n/' scripts/start.sh
    - sed -i -e 's/\r$/\n/' scripts/stop.sh
    - sed -i -e 's/\r$/\n/' scripts/install.sh
    - zip -r latest *
    - mkdir -p dpl_cd_upload
    - mv latest.zip dpl_cd_upload/latest.zip

after_success:
    - docker --version
    - pip install --user awscli
    - export PATH=$PATH:$HOME/.local/bin
    - eval $(aws ecr get-login --region us-east-2 --no-include-email)
    - docker build -t $AWS_ECR_APP:latest .
    - docker tag $AWS_ECR_APP:latest
    - docker push $AWS_ECR_APP:latest
    - docker images

deploy:
- provider: s3 #To upload the code to s3
  access_key_id: $AWS_ACCESS_KEY_ID
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  local_dir: dpl_cd_upload #from where
  skip_cleanup: true #use cache (doesn't work...)
  bucket: "arquichat-travis-deploy" #target bucket to use
  region: us-east-2 
  upload-dir: latest
  on:
    all_branches: true
- provider: codedeploy #Uploading to target group
  access_key_id: $AWS_ACCESS_KEY_ID
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  bucket: "arquichat-travis-deploy" #target bucket to use, defined before
  key: latest/latest.zip #Source code, you can use any name but must be consistent
  bundle_type: zip
  application: Arquichat
  deployment_group: arquichat
  region: us-east-2
  wait_until_deployed: true #wise thing to do
  on:
    branch: main