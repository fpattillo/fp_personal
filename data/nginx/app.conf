#upstream railsapp {
#    server misimplechat.ml:8080;
#}

server {
    listen 80;
    server_name misimplechat.ml;
    
    location / {
        return 301 https://$host$request_uri;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location /cable {
        proxy_pass http://misimplechat.ml:8080/cable;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        add_header 'Access-Control-Allow-Origin' 'https://www.arquichat.ml';
    }  
}

server {
    listen 443 ssl;
    server_name misimplechat.ml;
    
    location / {
        proxy_pass http://misimplechat.ml:8080; #for demo purposes
	proxy_set_header  Host $host;
	proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header  X-Forwarded-Proto $scheme;
	proxy_set_header  X-Forwarded-Ssl on; # Optional
	proxy_set_header  X-Forwarded-Port $server_port;
	proxy_set_header  X-Forwarded-Host $host;
	add_header 'Access-Control-Allow-Origin' 'https://www.arquichat.ml';
	add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-User-Email,X-User-Token';
    }

    location /cable {
        proxy_pass http://misimplechat.ml:8080/cable;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        add_header 'Access-Control-Allow-Origin' 'https://www.arquichat.ml';
    }

    ssl_certificate /etc/letsencrypt/live/misimplechat.ml/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/misimplechat.ml/privkey.pem;


    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}
